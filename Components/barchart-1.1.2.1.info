{"Name":"Bar Chart","Id":1268,"Alias":"barchart","Description":"`BarChart` displays data as an interactive bar chart.  It supports iOS\nand Android, and has customizable labels, legends, and other appearance\nproperties.\n\n### Adding a `BarChart` to your iOS app:\n\n```csharp\nusing BarChart;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();  \n\n  var data = new [] { 1f, 2f, 4f, 8f, 16f, 32f };\n  var chart = new BarChartView {\n    Frame = View.Frame,\n    ItemsSource = Array.ConvertAll (data, v =\u003e new BarModel { Value = v })\n  };\n\n  View.AddSubview (chart);\n}\n```\n\n### Adding a `BarChart` to your Android app:\n\n```csharp\nusing BarChart;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n  \n  var data = new [] { 1f, 2f, 4f, 8f, 16f, 32f };\n  var chart = new BarChartView (this) {\n    ItemsSource = Array.ConvertAll (data, v =\u003e new BarModel { Value = v })\n  };\n\n  AddContentView (chart, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n\n*Screenshot assemble with [PlaceIt](http://placeit.breezi.com/).*\n","Version":"1.1.2.1","Summary":"Easily display data on an interactive bar chart.","QuickStart":"`BarChart` displays data as an interactive bar chart.  It supports iOS\nand Android, and has customizable labels, legends, and other appearance\nproperties.\n\n## Examples\n\n### Adding a `BarChart` to your iOS app:\n\n```csharp\nusing BarChart;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();  \n\n  var data = new [] { 1f, 2f, 4f, 8f, 16f, 32f };\n  var chart = new BarChartView {\n    Frame = View.Frame,\n    ItemsSource = Array.ConvertAll (data, v =\u003e new BarModel { Value = v })\n  };\n\n  View.AddSubview (chart);\n}\n```\n\n### Adding a `BarChart` to your Android app:\n\n```csharp\nusing BarChart;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n  \n  var data = new [] { 1f, 2f, 4f, 8f, 16f, 32f };\n  var chart = new BarChartView (this) {\n    ItemsSource = Array.ConvertAll (data, v =\u003e new BarModel { Value = v })\n  };\n\n  AddContentView (chart, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n\n### Events and Customization\n\nBy subscribing to `BarClick`, you can be notified when the user\ntouches a bar:\n\n```csharp\nchart.BarClick += (sender, args) =\u003e {\n  BarModel bar = args.Bar;\n  Console.WriteLine (\"Pressed {0}\", bar);\n};\n```  \n\nChart values are limited by the minimum and maximum values in the\n`ItemsSource`. Alternatively, you can set minimum and maximum values\nmanually:\n\n```csharp\nchart.MinimumValue = 5;\nchart.MaximumValue = 8;\n```  \n\nTo return to default behavior (automatic fitting):\n\n```csharp\nchart.MinimumValue = null;\nchart.MaximumValue = null;\n```    \n\nYou can mix automatic and manual fitting:\n\n```csharp\nchart.MinimumValue = -2;\nchart.MaximumValue = null;\n```    \n\nY-axis tick marks are placed automatically at 1/4 intervals in the range\nof `Value` in your `ItemsSource`. To set place tick marks manually:\n\n```csharp\nchart.AutoLevelsEnabled = false;\nchart.AddLevelIndicator (0, title: \"zero\");\nchart.AddLevelIndicator (5);\n```\n\nResetting `AutoLevelsEnabled` to true removes all custom tick marks and\nreverts to the default behavior.\n\nOther customizable appearance properties:\n\n```csharp\nchart.GridHidden = true;\nchart.LegendHidden = true;\n\nchart.BarWidth = 40;\nchart.BarOffset = 2;\n```  \n\nChanging bar and caption colors:\n\n```csharp\n//iOS\nchart.BarColor = UIColor.Green;\nchart.BarCaptionInnerColor = UIColor.White;\nchart.BarCaptionInnerShadowColor = UIColor.Black;\nchart.BarCaptionOuterColor = UIColor.Black;\nchart.BarCaptionOuterShadowColor = UIColor.White;\n\n//Android\nchart.BarColor = Android.Graphics.Color.Green;\nchart.BarCaptionInnerColor = Android.Graphics.Color.White;\nchart.BarCaptionOuterColor = Android.Graphics.Color.Black;\n```  \n\nYou may also set `BarModel` appearance properties on an individual\nbasis:\n\n```csharp\nvar bar = new BarModel {\n  Value = 100500,\n  Color = UIColor.Green,\n  Legend = \"Unit Sales\",\n  ValueCaptionHidden = false,\n  ValueCaption = \"100k\"\n};\n```\n\n### Adding BarChart to AXML Layouts\n\nOr using axml layout:\n\n```xml\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" ... \u003e\n\n  \u003cbarchart.BarChartView\n    android:id=\"@+id/barChart\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    min_value=\"5\"\n    max_value=\"8\"\n    bar_width=\"40\"\n    bar_offset=\"2\"\n    bar_color=\"#FF0000\"\n    bar_caption_fontSize=\"30\"\n    bar_caption_innerColor=\"#000000\"\n    bar_caption_outerColor=\"#FFFFFF\" /\u003e\n\n\u003c/LinearLayout\u003e\n```\n","Hash":"e0be67e4138f0fcc3976cbe48c2bb949","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}